window.storyFormat({"name":"PaperthinForPrint","version":"0.3","description":"The proofing format for Twine 2, based on Paperthin. It displays passages in alphabetical order. Icon designed by <a href=\"http://www.thenounproject.com/Simon Child\">Simon Child</a> from the <a href=\"http://www.thenounproject.com\">Noun Project</a>","author":"<a href=\"http://chrisklimas.com\">Chris Klimas</a>, modified by <a href=\"https://stormweavers.com\">Pawel Dziemski</a> ","image":"icon.svg","url":"http://twinery.org/","license":"ZLib/Libpng","proofing":true,"source":"<!DOCTYPE html>\n<html>\n<head>\n<title>{{STORY_NAME}}</title>\n<meta charset=\"utf-8\">\n<style>\nbody { font: 10pt Cousine, monospace; margin: 2em; }\nh1 { font-size: 14pt; text-align: center; margin-bottom: 2em; }\ntw-storydata { display: block !important; }\ntw-passagedata { display: block !important; line-height: 200%; margin-bottom: 2em; white-space: pre-wrap; }\ntw-passagedata + tw-passagedata { border-top: 1pt dashed black; padding-top: 2em; }\ntw-passagedata:before { content: attr(name); display: block; font-weight: bold; }\n</style>\n<script>\nwindow.addEventListener('load', function() {\n    // Get the story data container\n    const storyData = document.querySelector('tw-storydata');\n    if (!storyData) return;\n\n    // Get all passage elements\n    const passages = Array.from(storyData.querySelectorAll('tw-passagedata'));\n    \n    // Function to handle natural sorting of strings with numbers\n    const naturalSort = (a, b) => {\n        const nameA = a.getAttribute('name').toLowerCase();\n        const nameB = b.getAttribute('name').toLowerCase();\n        \n        // Split strings into parts (numbers and non-numbers)\n        const splitIntoNumbersAndText = str => str.split(/(\\d+)/).filter(Boolean);\n        const partsA = splitIntoNumbersAndText(nameA);\n        const partsB = splitIntoNumbersAndText(nameB);\n        \n        // Compare each part\n        for(let i = 0; i < Math.min(partsA.length, partsB.length); i++) {\n            const partA = partsA[i];\n            const partB = partsB[i];\n            \n            // If both parts are numbers, compare numerically\n            if(!isNaN(partA) && !isNaN(partB)) {\n                const numA = parseInt(partA);\n                const numB = parseInt(partB);\n                if(numA !== numB) return numA - numB;\n            }\n            // Otherwise compare as strings\n            else {\n                if(partA !== partB) return partA.localeCompare(partB);\n            }\n        }\n        \n        // If all parts match so far, shorter strings come first\n        return partsA.length - partsB.length;\n    };\n    \n    // Sort passages using natural sort\n    passages.sort(naturalSort);\n    \n    // Remove all passages from DOM\n    passages.forEach(p => p.remove());\n    \n    // Add them back in sorted order\n    passages.forEach(p => storyData.appendChild(p));\n});\n</script>\n</head>\n<body>\n<h1>{{STORY_NAME}}</h1>\n{{STORY_DATA}}\n</body>\n</html>"});